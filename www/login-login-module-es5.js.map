{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginRoutingModule","imports","forChild","exports","LoginModule","declarations","LoginPage","toastCtrl","zoomService","userName","password","loggedIn","meetingNumber","meetingPassword","displayName","isLoggedIn","then","success","console","log","error","presentToast","text","create","message","duration","position","toast","present","login","logout","options","no_driving_mode","no_invite","no_meeting_end_message","no_titlebar","no_bottom_toolbar","no_dial_in_via_phone","no_dial_out_to_phone","no_disconnect_audio","no_share","no_audio","no_video","no_meeting_error_message","custom_meeting_id","meeting_views_options","no_unmute_confirm_dialog","no_webinar_register_dialog","joinMeeting","startMeeting","startInstantMeeting","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Login User\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-card>\\n    <ion-card-header color=\\\"primary\\\">\\n      Login User can:\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ul>\\n        <li>join a meeting</li>\\n        <li>start a scheduled meeting</li>\\n        <li>start an instant meeting</li>\\n      </ul>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header color=\\\"primary\\\">\\n      Login\\n    </ion-card-header>\\n    <ion-card-content padding>\\n      <p *ngIf=\\\"!loggedIn\\\">Enter your Zoom username and password</p>\\n      <ion-list *ngIf=\\\"!loggedIn\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Username</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userName\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Password</ion-label>\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n        </ion-item>\\n      </ion-list>\\n      <ion-button *ngIf=\\\"!loggedIn\\\" expand=\\\"full\\\" (click)=\\\"login()\\\">Login</ion-button>\\n      <ion-button *ngIf=\\\"loggedIn\\\" expand=\\\"full\\\" (click)=\\\"logout()\\\">Logout</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card *ngIf=\\\"loggedIn\\\">\\n    <ion-card-header>\\n      Meeting\\n    </ion-card-header>\\n    <ion-card-content padding>\\n      <div padding>\\n        <ion-button expand=\\\"full\\\" fill=\\\"outline\\\" (click)=\\\"startInstantMeeting()\\\">Start an Instant Meeting</ion-button>\\n      </div>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Meeting Number</ion-label>\\n          <ion-input type=\\\"string\\\" [(ngModel)]=\\\"meetingNumber\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Meeting Password (if any)</ion-label>\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"meetingPassword\\\"></ion-input>\\n        </ion-item>\\n      </ion-list>\\n      <ion-button expand=\\\"full\\\" (click)=\\\"joinMeeting()\\\">Join a Meeting</ion-button>\\n      <ion-button expand=\\\"full\\\" (click)=\\\"startMeeting()\\\">Start a Meeting</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginPage } from './login.page';\n\nimport { LoginRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    LoginRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport {ToastController} from '@ionic/angular';\nimport {Zoom} from '@ionic-native/zoom/ngx';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.page.html',\n  styleUrls: ['login.page.scss']\n})\nexport class LoginPage {\n  // [Warning] In production environment, please DO NOT hardcode your credentials. This is just for demo purpose.\n  // Login variables\n  userName = '';\n  password = '';\n  loggedIn = false;\n\n  // Meeting variables\n  meetingNumber = null;\n  meetingPassword = '';\n  displayName = 'Zoom Ionic';\n\n  constructor(\n    private toastCtrl: ToastController,\n    private zoomService: Zoom,\n  ) {\n    // Check whether the user is logged in.\n    this.zoomService.isLoggedIn().then((success) => {\n      console.log(success);\n      if (success === true) {\n        this.loggedIn = true;\n      } else {\n        this.loggedIn = false;\n      }\n    }).catch((error) => {\n      console.log(error);\n      this.presentToast(error);\n    });\n  }\n\n  async presentToast(text) {\n    const toast = await this.toastCtrl.create({\n      message: text,\n      duration: 3000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  /**\n   * Log user in with Zoom username and password.\n   */\n  login() {\n    console.log('Going to login');\n    this.zoomService.login(this.userName, this.password).then((success) => {\n      console.log(success.message);\n      this.presentToast(success.message);\n      this.loggedIn = true;\n      this.userName = '';\n      this.password = '';\n    }).catch((error) => {\n      console.log(error);\n      this.presentToast(error.message);\n    });\n  }\n\n  /**\n   * Log user out.\n   */\n  logout() {\n    console.log('Going to logout');\n    this.zoomService.logout().then((success) => {\n      console.log(success.message);\n      this.presentToast(success.message);\n      this.loggedIn = false;\n    }).catch((error) => {\n      this.presentToast(error.message);\n      console.log(error);\n    });\n  }\n\n  /**\n   * Join a meeting.\n   */\n  joinMeeting() {\n    console.log('Going to join meeting');\n    console.log(this.meetingNumber);\n    const options = {\n      no_driving_mode: true,\n      no_invite: true,\n      no_meeting_end_message: true,\n      no_titlebar: false,\n      no_bottom_toolbar: false,\n      no_dial_in_via_phone: true,\n      no_dial_out_to_phone: true,\n      no_disconnect_audio: true,\n      no_share: true,\n      no_audio: true,\n      no_video: true,\n      no_meeting_error_message: true,\n      custom_meeting_id: \"Customized Title\",\n      meeting_views_options: 64,\n      no_unmute_confirm_dialog: true,\n      no_webinar_register_dialog: false\n    };\n    this.zoomService.joinMeeting(this.meetingNumber, this.meetingPassword, this.displayName, options)\n        .then((success) => {\n          console.log(success);\n          this.presentToast(success);\n          this.meetingNumber = null;\n          this.meetingPassword = null;\n        }).catch((error) => {\n          console.log(error);\n          this.presentToast(error);\n    });\n  }\n\n  /**\n   * Start an existing meeting.\n   */\n  startMeeting() {\n    // Prepare meeting options\n    const options = {};\n    // Call start meeting method.\n    this.zoomService.startMeeting(this.meetingNumber, options).then((success) => {\n      console.log(success);\n      this.presentToast(success);\n      this.meetingNumber = null;\n      this.meetingPassword = null;\n    }).catch((error) => {\n      console.log(error);\n      this.presentToast(error);\n    });\n  }\n\n  /**\n   * Start an instant meeting.\n   */\n  startInstantMeeting() {\n    // Prepare meeting options\n    const options = {};\n    // Call start instant meeting method.\n    this.zoomService.startInstantMeeting(options).then((success) => {\n      console.log(success);\n      this.presentToast(success);\n    }).catch((error) => {\n      console.log(error);\n      this.presentToast(error);\n    });\n  }\n\n}\n"]}